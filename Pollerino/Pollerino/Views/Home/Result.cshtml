@model Pollerino.Models.Poll

@{
    ViewBag.Title = "Poll";
}

<h3>               </h3>

<br />
<div class="questionText">
    @Html.DisplayFor(m => m.QuestionText)
</div>
<div class="dots">........................................................</div>

<br />
<br />
<div class="options-content-center">
    <div class="options-content">

        @{string graphData = "";}
        @for (int i = 0; i < Model.Options.Count(); i++)
        {
            <div class="option-block">

                <div class="numberDot">@(i + 1). </div>
                <span class="optionTextEntered">

                    @Html.DisplayFor(x => Model.Options[i].OptionText)
                <span class="percentage">    @Html.DisplayFor(x => Model.Options[i].Percentage) %</span>
                    <span class="votes">
                        @Html.DisplayFor(x => Model.Options[i].NumVotes)</span>

                        <br />
                    </span>

            </div>
            var percentage = (Model.Options[i].Percentage.ToString()).Replace(',', '.');
            graphData += "{name:'" + Model.Options[i].OptionText + "', y: " + percentage + "},";

        }
        
    </div>

</div>


@{graphData = graphData.Substring(0, graphData.Length - 1);}

<script src="http://code.highcharts.com/highcharts.js"></script>

<div id="container" style=" height: 400px; width: 420px; margin: 0 auto"></div>

<script type="text/javascript">

    var graphData = [ @Html.Raw(HttpUtility.HtmlDecode(graphData))]
    //  graphData.replace(/"/g,"");

    $(function () {

        // Make monochrome colors and set them as default for all pies
        Highcharts.getOptions().plotOptions.pie.colors = (function () {
            var colors = [],
                base = Highcharts.getOptions().colors[0],
                i;

            for (i = 0; i < 10; i += 1) {
                // Start out with a darkened base color (negative brighten), and end
                // up with a much brighter color
                colors.push(Highcharts.Color(base).brighten((i - 3) / 7).get());
            }
            return colors;
        }());


        // Build the chart
        chart = new Highcharts.Chart({
            chart: {
                plotBackgroundColor: "#393946",
                borderColor: "#393946",
                plotBorderWidth: null,
                plotShadow: false,
                renderTo: 'container',
                spacingBottom: 0,
                spacingTop: 0,
                spacingLeft: 0,
                spacingRight: 0,

                // Explicitly tell the width and height of a chart
                width: 450,
                height: 350,
                type: 'pie'
            },
            title: {
                text: ''
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            plotOptions: {
                pie: {
                    borderColor: '#000000',
                    borderWidth:0,
                    allowPointSelect: true,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: true,
                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                        style: {
                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'white'
                        }
                    }
                }
            },
            series: [{
                name: "Option",
                data:
                    graphData
                /*  [
                  { name: "Microsoft Internet Explorer", y: 56.33 },
                  { name: "Chrome", y: 24.03 },
              ]*/
            }]
        });
    });

</script>

<div class="text-center">
    <h3>Total votes: @Model.TotalVotes</h3>
</div>


@*
    http://www.highcharts.com/demo/pie-monochrome/grid-light
    http://stackoverflow.com/questions/23326131/uncaught-typeerror-undefined-is-not-a-function-highcharts-mvc
*@